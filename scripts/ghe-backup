#!/bin/sh
# Usage: ghe-backup-all
# Take snapshots of all GitHub Enterprise data, including the MySQL database.
set -e

# Bring in the backup configuration
cd $(dirname "$0")/..
. scripts/ghe-backup-config

echo "Starting backup of $GHE_HOSTNAME (increment $GHE_SNAPSHOT_TIMESTAMP)"

# Make sure we have SSH connectivity to the GHE host
ghe-host-check

# Create the timestamped snapshot directory where files for this run will live.
mkdir -p "$GHE_SNAPSHOT_DIR"

# Snapshot all Git repository data
echo "Backing up Git repository data ..." 1>&2
ghe-${GHE_BACKUP_STRATEGY}-backup

# Snapshot all Pages data
echo "Backing up GitHub Pages data ..." 1>&2
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-pages' > "$GHE_SNAPSHOT_DIR"/ghe-pages-backup.tar

# Snapshot all MySQL data
echo "Backing up MySQL data ..." 1>&2
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-mysql | gzip' > "$GHE_SNAPSHOT_DIR"/ghe-mysql-backup.sql.gz

# Snapshot all Redis data
echo "Backing up Redis data ..." 1>&2
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-redis' > "$GHE_SNAPSHOT_DIR"/ghe-redis-backup.rdb

# Snapshot SSH public keys
echo "Backing up SSH public keys ..." 1>&2
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-authorized-keys' > "$GHE_SNAPSHOT_DIR"/ghe-authorized-keys-backup.json

# Snapshot SSH host keys
echo "Backing up SSH host keys ..." 1>&2
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-ssh-host-keys' > "$GHE_SNAPSHOT_DIR"/ghe-ssh-host-keys-backup.tar

# Snapshot Elasticsearch indices
echo "Backing up Elasticsearch indices ..." 1>&2
ssh admin@"$GHE_HOSTNAME" -- 'ghe-export-es-indices' > "$GHE_SNAPSHOT_DIR"/ghe-es-indices-backup.tar

# Update the current symlink to point to the new snapshot
rm -f "$GHE_DATA_DIR/current"
ln -s "$GHE_SNAPSHOT_TIMESTAMP" "$GHE_DATA_DIR/current"

echo "Backup of $GHE_HOSTNAME (increment $GHE_SNAPSHOT_TIMESTAMP) completed at $(date +"%Y-%m-%dT%H:%M:%S")."
