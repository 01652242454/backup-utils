#!/bin/sh
#/ Usage: ghe-backup [-v]
#/ Take snapshots of all GitHub Enterprise data, including Git repository data,
#/ the MySQL database, instance settings, GitHub Pages data, etc.
#/
#/ With -v, enable verbose output and show more information about what's being
#/ transferred.
#set -e

# Bring in the backup configuration
cd $(dirname "$0")/..
. scripts/ghe-backup-config

FAILED_BACKUP_STEPS=

check_status () {
    if [ $? -gt 0 ]; then
        FAILED_BACKUP_STEPS="$FAILED_BACKUP_STEPS $1"
    fi
}

echo "Starting backup of $GHE_HOSTNAME in snapshot $GHE_SNAPSHOT_TIMESTAMP"

# Make sure we have SSH connectivity to the GHE host
ghe-host-check || exit 1

# Create the timestamped snapshot directory where files for this run will live.
mkdir -p "$GHE_SNAPSHOT_DIR"

# Mark the snapshot as incomplete
touch "$GHE_SNAPSHOT_DIR/incomplete"

echo "Backing up GitHub settings ..."
ghe-ssh "$GHE_HOSTNAME" -- 'ghe-export-settings' > "$GHE_SNAPSHOT_DIR"/settings.json
ghe-ssh "$GHE_HOSTNAME" -- "cat '$GHE_REMOTE_LICENSE_FILE'" > "$GHE_SNAPSHOT_DIR"/enterprise.ghl
check_status "settings"

echo "Backing up Git repositories ..."
ghe-${GHE_BACKUP_STRATEGY}-backup
check_status "repositories"

echo "Backing up GitHub Pages ..."
ghe-ssh "$GHE_HOSTNAME" -- 'ghe-export-pages' > "$GHE_SNAPSHOT_DIR"/pages.tar
check_status "pages"

echo "Backing up MySQL database ..."
ghe-ssh "$GHE_HOSTNAME" -- 'ghe-export-mysql | gzip' > "$GHE_SNAPSHOT_DIR"/mysql.sql.gz
check_status "mysql"

echo "Backing up Redis database ..."
ghe-ssh "$GHE_HOSTNAME" -- 'ghe-export-redis' > "$GHE_SNAPSHOT_DIR"/redis.rdb
check_status "redis"

echo "Backing up SSH public keys ..."
ghe-ssh "$GHE_HOSTNAME" -- 'ghe-export-authorized-keys' > "$GHE_SNAPSHOT_DIR"/authorized-keys.json
check_status "authorized-keys"

echo "Backing up SSH host keys ..."
ghe-ssh "$GHE_HOSTNAME" -- 'ghe-export-ssh-host-keys' > "$GHE_SNAPSHOT_DIR"/ssh-host-keys.tar
check_status "ssh-host-keys"

echo "Backing up Elasticsearch indices ..."
ghe-ssh "$GHE_HOSTNAME" -- 'ghe-export-es-indices' > "$GHE_SNAPSHOT_DIR"/es-indices.tar
check_status "es-indices"

# If everything was successful, mark the snapshot as complete, update the
# current symlink to point to the new snapshot and prune expired and failed
# snapshots.
if [ -z "$FAILED_BACKUP_STEPS" ]; then
    rm "$GHE_SNAPSHOT_DIR/incomplete"

    rm -f "$GHE_DATA_DIR/current"
    ln -s "$GHE_SNAPSHOT_TIMESTAMP" "$GHE_DATA_DIR/current"

    ghe-prune-snapshots
fi

echo "Completed backup of $GHE_HOSTNAME in snapshot $GHE_SNAPSHOT_TIMESTAMP at $(date +"%H:%M:%S")"

# Exit non-zero and list the steps that failed.
if [ -n "$FAILED_BACKUP_STEPS" ]; then
    steps="$(echo $FAILED_BACKUP_STEPS | sed 's/ /, /g')"
    echo "Error: Snapshot incomplete. Some steps failed: ${steps}. "
    exit 1
fi

# Make sure we exit zero after the conditional
true
